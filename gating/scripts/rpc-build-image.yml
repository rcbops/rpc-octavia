---
# Copyright 2014-2017, Rackspace US, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: Build Octavia Image
  hosts: localhost
  user: root
  tasks:
    - name: Gather variables
      include_vars: "{{ item }}"
      with_items:
        - '/opt/rpc-octavia/playbooks/vars/main.yml'
    - name: Install apt packages
      apt:
        pkg: "{{ item }}"
        state: "present"
        update_cache: yes
      register: install_packages
      until: install_packages|success
      retries: 5
      delay: 2
      with_items:
        - qemu
        - uuid-runtime
        - curl
        - kpartx
        - git
    - name: Create Octavia tmp dir
      file:
        state: directory
        path: "{{ bootstrap_host_octavia_tmp }}"
    - name: Install pip requirements
      pip:
        name: "{{ item }}"
        state: "present"
        extra_args: "-c https://git.openstack.org/cgit/openstack/requirements/plain/upper-constraints.txt?id={{ requirements_git_install_branch | regex_replace(' #.*$','') }} --isolated"
      register: install_packages
      until: install_packages|success
      retries: 5
      delay: 2
      with_items:
        - argparse
        - "Babel>=1.3"
        - dib-utils
        - PyYAML
        - "diskimage-builder>=2.9.0"
    - name: Clone Octavia
      git:
        repo: "https://git.openstack.org/openstack/octavia"
        dest: "{{ bootstrap_host_octavia_tmp }}/octavia"
        version: "{{ octavia_git_install_commit }}"
    # Build Octavia amphora image
    - name: Create amphora directory
      file:
        path: "{{ amp_image_file_dir }}"
        state: directory
    - name: Create dib directory
      file:
        path: "{{ bootstrap_host_octavia_tmp }}/diskimage-builder"
        state: directory
    - name: Create amphora image
      shell: "./diskimage-create.sh -o {{ amp_image_file_dir }}/amphora-x64-haproxy.qcow2"
      args:
        chdir: "{{ bootstrap_host_octavia_tmp }}/octavia/diskimage-create"
        creates: "{{ amp_image_file_dir }}/amphora-x64-haproxy.qcow2"
      tags:
      - skip_ansible_lint
  vars:
    bootstrap_host_octavia_tmp: "{{ octavia_tmp_dir }}"
    amp_image_file_dir: "{{ working_dir }}/amp-image/{{ rpc_release }}"
