---
  # Copyright 2018, Rackspace US, Inc.
  #
  # Licensed under the Apache License, Version 2.0 (the "License");
  # you may not use this file except in compliance with the License.
  # You may obtain a copy of the License at
  #
  #     http://www.apache.org/licenses/LICENSE-2.0
  #
  # Unless required by applicable law or agreed to in writing, software
  # distributed under the License is distributed on an "AS IS" BASIS,
  # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  # See the License for the specific language governing permissions and
  # limitations under the License.

- name: Download image
  get_url:
    url: "{{ octavia_artefact_url }}"
    dest: "{{ octavia_amp_image_path }}"
  retries: 10
  delay: 10
  when:
    - download_artefact|bool == true
  delegate_to: "{{ groups['utility_all'][0] }}"

- name: Compute md5
  stat:
    path: "{{ octavia_amp_image_path }}"
  register: amp_stat
  delegate_to: "{{ groups['utility_all'][0] }}"

- name: Fail when no image provided
  fail:
    msg: "Please copy the amphora image to {{ octavia_amp_image_path }}"
  when: amp_stat.stat.exists == False
  delegate_to: "{{ groups['utility_all'][0] }}"

- name: Set md5
  set_fact: amp_md5="{{ amp_stat.stat.md5 }}"

- name: Register glance md5
  shell: |
    . {{ ansible_env.HOME }}/openrc
    openstack image show amphora-x64-haproxy -c properties -f value
  register: glance_md5
  ignore_errors: true
  delegate_to: "{{ groups['utility_all'][0] }}"

- debug:
    msg: "{{ glance_md5 }}"

- name: Register glance id
  shell: |
    . {{ ansible_env.HOME }}/openrc
    openstack image show amphora-x64-haproxy -c id -f value
  register: glance_id
  when:
    - glance_md5|succeeded
    - not glance_md5.stdout|search(amp_md5)
  delegate_to: "{{ groups['utility_all'][0] }}"

- name: Upload new image to glance
  shell: |
    . {{ ansible_env.HOME }}/openrc
    openstack image create --file  {{ octavia_amp_image_path }} --disk-format qcow2 \
    --tag octavia-amphora-image --property "md5={{ amp_md5 }}" --private --project service \
    amphora-x64-haproxy
  when: "( glance_md5 | failed ) or  not (glance_md5.stdout|search(amp_md5))"
  delegate_to: "{{ groups['utility_all'][0] }}"

- name: Delete old image from glance
  shell: |
    . {{ ansible_env.HOME }}/openrc
    openstack image delete {{ glance_id.stdout }}
  when:
    - glance_md5|succeeded
    - not glance_md5.stdout|search(amp_md5)
  delegate_to: "{{ groups['utility_all'][0] }}"